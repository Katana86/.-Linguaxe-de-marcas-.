1.Listar el título de todos los libros.
	for $b in //bib/libro
	return $b/titulo,
2.Listar año y título de todos los libros, ordenados por el año.
	for $b in //bib/libro
	order by $b/@ano ascending
	return
	<titulo>{$b/@ano}{data($b/titulo)}</titulo>
3.Listar los libros cuyo precio sea 65.95
	for $b in //bib/libro
	where $b/prezo='65.95'
	return $b
4.Listar los libros publicados antes del año 2000
	for $b in //bib/libro
	where $b/@ano < 2000
	return $b
5.Listar año y título de los libros publicados por Addison-Wesley después del año 1992.
	for $b in //bib/libro
	where $b/editorial = 'Addison-Wesley' and $b/@ano > "1992"
	return $b 
6.Listar año y título de los libros que tienen más de un autor.
	for $b in //bib/libro
	where count($b/autor) > 1 
	return <titulo>{$b/@ano}{data($b/titulo)}</titulo>
7.Listar año y título de los libros que tienen no tienen autor.
	for $b in //bib/libro
	where count($b/autor) <= 0
	return <titulo>{$b/@ano}{data($b/titulo)}</titulo>
8.Mostrar los apellidos de los autores que aparecen en el documento, sin repeticiones, ordenados alfabéticamente.
	for $autor in distinct-values(//bib/libro/autor/apelido)
	order by $autor ascending
	return $autor
9.Por cada libro, listar agrupado en un elemento <result> su titulo y autores
	for $titulo in //bib/libro/titulo
	for $autor in //bib/libro/autor
	return <result titulo='{$titulo}'>
	{$autor}
	</result>
10.Por cada libro, obtener su título y el número de autores, agrupados en un elemento <libro>
	for $titulo in //bib/libro/titulo
	for $autor in count(//bib/libro/autor)
	return <libro titulo='{$titulo}'>{$autor}</libro>
11.Generar un documento html con un encabezado que diga “Listado de libros” seguido de una tabla de 3 columnas, en la que se muestre el titulo, editorial y precio de cada libro. La tabla deberá tener bordes y la primera fila tendrá un formato especial con los nombres de las columnas. Las columnas de título y editorial irán alineadas a la izquierda, y el precio a la derecha.
#No lo supe hacer
<html> 
 <head> 
  <title> Listado de libros </title> 
  </head>
 <body> 
  <table border="1">
   <caption>Listado de libros</caption>
   <th> Titulo </th>  
   <th> Editorial </th>  
   <th> Precio </th>  

{ 
for $a in doc("../prueba/libros.xml")/bib/libro 
return 
   <tr> 
    <td align ="left"> <i> { string( $a/titulo ) } </i> </td> 
	<td align ="left"> { string( $a/editorial ) } </td>
	<td align ="right"> { string( $a/prezo) } </td>
   </tr> 
}

(: No lo pide el enunciado, pero así se podría mostrar el precio medio de los libros :)
{ 
let $a := doc("../prueba/libros.xml")/bib/libro 
return 
   <tr> 
    <td> {avg( $a/prezo ) } </td> 
   </tr> 
} 
  </table> 
  </body> 
</html>
12.Generar el siguiente documento html con la información de los libros del autor Stevens. El valor precio total es un campo calculado utilizando una consulta con una cláusula let.
<html> 
 <head> 
  <title> Libros de Stevens </title> 
  </head>
 <body> 
  <table border="1">
   <caption>Listado de libros</caption>
   <th> Titulo </th>  
   <th> Precio </th>  
{ 
for $a in doc("../prueba/libros.xml")//libro 
where $a/autor/apelido="Stevens"
return 
<tr> 
<td>{$a/titulo}</td>
<td>{$a/prezo}</td>
</tr>
} 

{
let $a := doc("../prueba/libros.xml")/bib/libro 
where $a/autor/apelido="Stevens"
return 
   <tr> 
    <td> {sum( $a/prezo ) } </td> 
   </tr> 
} 
  </table> 
  </body> 
</html>
